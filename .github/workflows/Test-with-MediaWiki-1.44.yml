name: Test with MediaWiki 1.44
on:
  workflow_run:
    workflows: ["MediaWiki 1.44 trigger"]
    types: [completed]

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
            node-version: '22'
      - name: Install last npm
        run: |
            sudo node -v
            sudo npm -v
            sudo npm i -g npm
            sudo npm i -g yarn
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: '8.4'
            tools: composer
            
      - name: Copy two instances of Mediawiki
        run: |
            sudo apt-get install -y git-review
            chmod +x deployMediawiki.sh
            chmod +x deploy2Mediawiki.sh
            ./deployMediawiki.sh REL1_44 servers/mediawiki1/htdocs 
            cp -R  servers/mediawiki1/htdocs servers/mediawiki2/htdocs
            ./deploy2Mediawiki.sh REL1_44 servers/mediawiki1/htdocs 
            ./deploy2Mediawiki.sh REL1_44 servers/mediawiki2/htdocs 
            
      #- name: Check the code of PushAll
        #working-directory: ./servers/mediawiki1/htdocs/w/extensions/PushAll
        #run: |
            #composer test
            #yarn test
            
      #- name: Check the code of NamespaceData
        #working-directory: ./servers/mediawiki1/htdocs/w/extensions/NamespaceData
        #run: |
            #composer test
            #yarn test
                  
      - name: Start instances of Mediawiki
        run: |
            docker compose -f docker-compose_php8.yaml  up -d 
            sleep 30
          # docker run --privileged --cgroupns=host -tid \
          # --name  instance1.rockylinux-apache-php-mariadb-rdfunit \
          # -h serverdev-mediawiki1.localdomain \
          # --network=mediawiki-extension-linkedwiki-ci_mediawiki-ci --ip=172.19.0.2 \
          # --add-host serverdev-mediawiki2.localdomain:172.19.0.3 \
          # --add-host database-test1.localdomain:172.19.0.4 \
          # --add-host database-test2.localdomain:172.19.0.5 \
          # -v "/sys/fs/cgroup:/sys/fs/cgroup:rw" \
          # -v "${PWD}/servers/mediawiki1:/var/www/mediawiki:ro" \
          # -v "${PWD}/servers/mediawiki1/vhost.conf:/etc/httpd/conf.d/vhost.conf:ro" \
          # -v "$PWD/config:/config:ro" \
          # -v "${PWD}/coverage/tools:/coverage/tools:ro" \
          # -v "${PWD}/coverage/mediawiki1/log:/coverage/log" \
          # -v "${PWD}/coverage/mediawiki1/report:/coverage/report" \
          # --env-file '.env' \
          # --env XDEBUG_CONFIG='${XDEBUG_CONFIG}' \
          # --env TERM='xterm' \
          # bordercloud/rockylinux-apache-php8-mariadb-rdfunit
          # docker run --privileged --cgroupns=host -tid \
          # --name  instance2.rockylinux-apache-php-mariadb-rdfunit \
          # -h serverdev-mediawiki2.localdomain \
          # --network=mediawiki-extension-linkedwiki-ci_mediawiki-ci --ip=172.19.0.3 \
          # --add-host serverdev-mediawiki1.localdomain:172.19.0.2 \
          # --add-host database-test1.localdomain:172.19.0.4 \
          # --add-host database-test2.localdomain:172.19.0.5 \
          # -v "/sys/fs/cgroup:/sys/fs/cgroup:rw" \
          # -v "${PWD}/servers/mediawiki2:/var/www/mediawiki:ro" \
          # -v "${PWD}/servers/mediawiki2/vhost.conf:/etc/httpd/conf.d/vhost.conf:ro" \
          # -v "$PWD/config:/config:ro" \
          # -v "${PWD}/coverage/tools:/coverage/tools:ro" \
          # -v "${PWD}/coverage/mediawiki2/log:/coverage/log" \
          # -v "${PWD}/coverage/mediawiki2/report:/coverage/report" \
          # --env-file '.env' \
          # --env XDEBUG_CONFIG='${XDEBUG_CONFIG}' \
          # --env TERM='xterm' \
          # bordercloud/rockylinux-apache-php8-mariadb-rdfunit

      - name: Install instances of Mediawiki
        run: |
            cat ./mariadb_secure.sh | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            cat ./mariadb_secure.sh | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash

            echo 'php /var/www/mediawiki/htdocs/w/maintenance/install.php --dbname=wikidb --dbserver="localhost" --installdbuser=root --installdbpass=dockerpass --dbuser=root --dbpass=dockerpass --skins=Vector --server="http://serverdev-mediawiki1.localdomain" --scriptpath=/w --lang=en --pass=dockerpass --confpath="/tmp" "Wiki" "Admin"' | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'php /var/www/mediawiki/htdocs/w/maintenance/install.php --dbname=wikidb --dbserver="localhost" --installdbuser=root --installdbpass=dockerpass --dbuser=root --dbpass=dockerpass --skins=Vector --server="http://serverdev-mediawiki2.localdomain" --scriptpath=/w --lang=en --pass=dockerpass --confpath="/tmp" "Wiki" "Admin"' | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash

            echo 'cat /tmp/LocalSettings.php'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash > ./servers/mediawiki1/htdocs/w/LocalSettings_generate.php 
            sed -i 's/wgDefaultSkin = "vector-2022"/wgDefaultSkin = "vector"/g' ./servers/mediawiki1/htdocs/w/LocalSettings_generate.php
            cat ./servers/mediawiki1/htdocs/w/LocalSettings_generate.php >> ./servers/mediawiki1/htdocs/w/LocalSettings.php
            cat ./config/wiki.php >> ./servers/mediawiki1/htdocs/w/LocalSettings.php
            cat ./config/wiki_private.php >> ./servers/mediawiki1/htdocs/w/LocalSettings.php
            cat ./config/extensions.php >> ./servers/mediawiki1/htdocs/w/LocalSettings.php
            cat ./config/linkedwiki_mediawiki1.php >> ./servers/mediawiki1/htdocs/w/LocalSettings.php

            echo 'cat /tmp/LocalSettings.php'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash > ./servers/mediawiki2/htdocs/w/LocalSettings_generate.php
            sed -i 's/wgDefaultSkin = "vector-2022"/wgDefaultSkin = "vector"/g' ./servers/mediawiki2/htdocs/w/LocalSettings_generate.php
            cat ./servers/mediawiki2/htdocs/w/LocalSettings_generate.php >> ./servers/mediawiki2/htdocs/w/LocalSettings.php
            cat ./config/wiki.php >> ./servers/mediawiki2/htdocs/w/LocalSettings.php
            cat ./config/wiki_public.php >> ./servers/mediawiki2/htdocs/w/LocalSettings.php
            cat ./config/extensions.php >> ./servers/mediawiki2/htdocs/w/LocalSettings.php
            cat ./config/linkedwiki_mediawiki2.php >> ./servers/mediawiki2/htdocs/w/LocalSettings.php
            
            echo "Create folder images"
            echo 'cp /var/www/mediawiki/htdocs/w/images /var/www/mediawiki-images -R -p ; mkdir -p /var/www/mediawiki-images/deleted ; chown apache:apache /var/www/mediawiki-images -R' | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'cp /var/www/mediawiki/htdocs/w/images /var/www/mediawiki-images -R -p ; mkdir -p /var/www/mediawiki-images/deleted ; chown apache:apache /var/www/mediawiki-images -R' | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash

            echo 'php /var/www/mediawiki/htdocs/w/maintenance/update.php --quick' | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'php /var/www/mediawiki/htdocs/w/maintenance/update.php --quick' | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            
            cat ./config/sparql_grantPrivate.sql  | docker exec -i instance1.rockylinux-virtuoso7 isql 1111 dba dba
            cat ./config/sparql_grantPublic.sql  | docker exec -i instance2.rockylinux-virtuoso7 isql 1111 dba dba
            
      - name: Enable the coverage mode in XDebug
        run: |
            echo 'sed -i "s/;auto_prepend_file =/auto_prepend_file =/" /etc/php.ini && sed -i "s/;auto_append_file =/auto_append_file =/" /etc/php.ini && sed -i "s/xdebug.mode = off/xdebug.mode = coverage/" /etc/php.d/xdebug.ini && systemctl restart php-fpm && chown apache:apache /coverage/log -R && chmod -R o+r /coverage/log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'sed -i "s/;auto_prepend_file =/auto_prepend_file =/" /etc/php.ini && sed -i "s/;auto_append_file =/auto_append_file =/" /etc/php.ini && sed -i "s/xdebug.mode = off/xdebug.mode = coverage/" /etc/php.d/xdebug.ini && systemctl restart php-fpm && chown apache:apache /coverage/log -R && chmod -R o+r /coverage/log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            
      - name: Add hosts to /etc/hosts
        run: |
          # Problem about a timeout before the tests
          echo '172.19.0.2 serverdev-mediawiki1.localdomain' | sudo tee -a /etc/hosts
          echo '172.19.0.3 serverdev-mediawiki2.localdomain' | sudo tee -a /etc/hosts
          echo '172.19.0.4 database-test1.localdomain' | sudo tee -a /etc/hosts
          echo '172.19.0.5 database-test2.localdomain' | sudo tee -a /etc/hosts
          wget http://serverdev-mediawiki1.localdomain/
          wget http://serverdev-mediawiki2.localdomain/

      - name: Start Selenium Hub
        working-directory: ./test
        run: docker compose -f docker-compose.yaml up -d

      - name: Install selenium-side-runner & drivers
        run: |
            npm install --silent -g selenium-side-runner
        
      - name: Clean log and report
        run: |
            chmod +x ./coverage/tools/cleanReport.sh
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'truncate -s 0 /var/log/php-fpm/www-error.log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'truncate -s 0 /var/log/php-fpm/www-error.log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            mkdir -p ./coverage/log
            mkdir -p ./coverage/report
            rm -rf ./coverage/log/*
            rm -rf ./coverage/report/*
        
      - name: Check Selenium
        working-directory: ./test
        run: |
            chmod +x importFile.sh
            ./importFile.sh check_mediawiki_1_2.side -o check_mediawiki_1_2_final.side
            wget http://serverdev-mediawiki1.localdomain/
            wget http://serverdev-mediawiki2.localdomain/
            selenium-side-runner --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./check_mediawiki_1_2_final.side
            
      - name: Init wiki users
        working-directory: ./test
        run: |
            selenium-side-runner --server http://localhost:4444/wd/hub -c "browserName=firefox" ./create_users.side
            echo 'php /var/www/mediawiki/htdocs/w/maintenance/createBotPassword.php --grants basic,createeditmovepage,editdata,delete,editpage,uploadeditmovefile,uploadfile,highvolume --appid mediawiki1 UserData ff38s9u4feh07vjs2s6t88dh2pv5cfgv' | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash

      - name: Clean log before new tests
        run: |
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            rm -rf ./coverage/log/*
            
      - name: Execute the test suite of NamespaceData extension
        working-directory: ./test/NamespaceData
        run: |
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./suite_tests.side
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=firefox" ./suite_tests.side
             
      - name: Check the coverage of tests for NamespaceData extension
        run: |
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            php coverage/tools/createGlobalReportForNamespaceData.php
            
      - name: Clean log before new tests
        run: |
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            rm -rf ./coverage/log/*
          
      - name: Check Mediawiki API for the PushAll extension
        working-directory: ./test/api
        run: |
            chmod +x *.sh
            sudo printf "\n172.19.0.4      database-test1.localdomain\n172.19.0.5      database-test2.localdomain\n172.19.0.2      serverdev-mediawiki1.localdomain\n172.19.0.3      serverdev-mediawiki2.localdomain\n" | sudo tee -a /etc/hosts
            ./test01_login.sh 
            ./test02_edit.sh 
            ./test03_upload.sh 
            ./test04_revisions.sh 
            ./test05_filesInPage.sh 
            ./test06_modulesAndTemplatesInPage.sh 
            ./test07_allpages.sh 
            ./test08_categorymembers.sh 
            ./test09_searchPage.sh 
            ./test10_searchCategory.sh

      - name: Execute the test suite of PushAll extension
        working-directory: ./test/PushAll
        run: |
            chmod +x clean_mediawiki1.sh
            chmod +x clean_mediawiki2.sh
            chmod +x make_tests.sh
            ./clean_mediawiki1.sh
            ./clean_mediawiki2.sh
            ./make_tests.sh /tmp/test/PushAll
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./import_final.side
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./userDataAddRemoteWikis.side
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./tests_final.side
            #./clean_mediawiki2.sh
            #selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=firefox" ./tests_final.side
            ./clean_mediawiki1.sh
            ./clean_mediawiki2.sh
            
      - name: Check the coverage of tests for PushAll extension
        run: |
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            php coverage/tools/createGlobalReportForPushAll.php
            
      - name: Clean log before new tests
        run: |
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo '/coverage/tools/cleanReport.sh'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            rm -rf ./coverage/log/*
            
      - name: Check the code of LinkedWiki extension
        working-directory: ./servers/mediawiki1/htdocs/w/extensions/LinkedWiki
        run: |
            composer test
            yarn test
            
      - name: Execute the test suite of LinkedWiki extension
        working-directory: ./test/LinkedWiki
        run: |
            chmod +x make_tests.sh
            ./clean_mediawiki1.sh
            ./make_tests.sh 
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./tests_final.side
            ./clean_mediawiki1.sh
            selenium-side-runner  --server http://localhost:4444/wd/hub -c "browserName=chrome"  ./testsJobs_final.side
            echo 'curl -iL -H "Accept: text/turtle" http://serverdev-mediawiki1.localdomain/wiki/Data:Test301'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            ./clean_mediawiki1.sh
          
      - name: Check the coverage of tests for LinkedWiki extension
        run: |
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash
            echo 'chmod -R o+r /coverage/log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash
            php coverage/tools/createGlobalReportForLinkedWiki.php
          
      - name: Check errors
        run: |
            echo 'cat /var/log/php-fpm/www-error.log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash > m1_www-error.log
            echo 'cat /var/log/php-fpm/www-error.log'  | docker exec -i instance2.rockylinux-apache-php-mariadb-rdfunit bash > m2_www-error.log
            echo 'ls /var/log/php-fpm'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash > ls.txt
            echo 'ls /var/log'  | docker exec -i instance1.rockylinux-apache-php-mariadb-rdfunit bash >> ls.txt
            cat ls.txt
            cat m1_www-error.log
            cat m2_www-error.log
            wget http://172.19.0.2/w/
            ! [ -s m1_www-error.log ]
            ! [ -s m2_www-error.log ]
