--[[
-- Debug console

frame = mw.getCurrentFrame() -- Get a frame object
newFrame = frame:newChild{ -- Get one with args
    title = 'test' ,
 args = {
    Label = 'test' ,
 iri = 'http://serverdev-mediawiki1.localdomain/wiki/Test301'
    }
}

mw.log(p.save(newFrame) )

]]
--[[
-- Debug console

frame = mw.getCurrentFrame() -- Get a frame object
newFrame = frame:newChild{ -- Get one with args
    title = 'Test34 page' ,
 args = {
    Label = 'test' ,
 iri = 'http://serverdev-mediawiki1.localdomain/wiki/Test301'
    }
}

mw.log(p.infobox(newFrame) )

]]

local p = {}

function p.save(f)
    local capiunto = require 'capiunto'
    local linkedwiki = require 'linkedwiki'
    linkedwiki.setCurrentFrame(mw.getCurrentFrame())

   --prefix
   local rdfs = 'http://www.w3.org/2000/01/rdf-schema#'

   -- save data
   local subject = f.args.iri or linkedwiki.getCurrentIRI();
   local object =  linkedwiki.new(subject)
   --object:setDebug(true)
   object:setConfig('http://database-test1.localdomain/data')

   object:removeSubject() -- delete all triples of this subject

   mw.log(object:addPropertyString(rdfs..'label',f.args['Label'],''))

    return
end

function p.infobox(f)
    local capiunto = require 'capiunto'
    local linkedwiki = require 'linkedwiki'
    linkedwiki.setCurrentFrame(mw.getCurrentFrame())

   --prefix
   local rdfs = 'http://www.w3.org/2000/01/rdf-schema#'

   --  f.args.iri or linkedwiki.getCurrentIRI();
   local subject = 'http://serverdev-mediawiki1.localdomain/wiki/Test301_pagewrite';
   local object =  linkedwiki.new(subject)
   --object:setDebug(true)
   object:setConfig('http://database-test1.localdomain/data')
   local title1 = object:getValue(rdfs .. 'label')
   
   local subject2 = 'http://serverdev-mediawiki1.localdomain/wiki/testJob';
   local object2 =  linkedwiki.new(subject2)
   --object:setDebug(true)
   object2:setConfig('http://database-test1.localdomain/data')
   local title2 = object2:getValue(rdfs .. 'label')
   
   --mw.log("test")
   --mw.log(title)
   --mw.log(linkedwiki.isEmpty(title))
  -- if linkedwiki.isEmpty(title) then
  --      title = object:getValue(rdfs .. 'label')
        -- --mw.log(object:getLastQuery())
  --  end

    return capiunto.create( {
        title =  'TEST'  ,
                top = 'Project',
    } )
    :addRow( 'Test301_pagewrite label', title1 )
    :addRow( 'testJob label', title2 )
    :addWikitext( object:getMaintenanceCategory())
end

return p
